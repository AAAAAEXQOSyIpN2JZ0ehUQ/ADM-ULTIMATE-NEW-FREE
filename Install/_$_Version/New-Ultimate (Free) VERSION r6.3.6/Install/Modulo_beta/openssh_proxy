#!/bin/bash

cor[1]="\033[1;33m"
cor[2]="\033[1;32m"
cor[3]="\033[1;31m"
cor[4]="\033[1;36m"
cor[5]="\033[0m"

minhas_portas () {
sleep 3s
portas_var="/tmp/portas"
porta_var="/tmp/portas2"
lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN" > $portas_var
while read port; do
var1=$(echo $port | awk '{print $1}')
var2=$(echo $port | awk '{print $9}' | awk -F ":" '{print $2}')
if [ ! -e "$porta_var" ]; then
echo -e "$var1 $var2" > $porta_var
fi
if [ "$(cat $porta_var | grep "$var1" | grep "$var2")" = "" ]; then
echo -e "$var1 $var2" >> $porta_var
fi
done < $portas_var
i=1
while read pts; do
if [ "$pts" = "" ]; then
break
fi
service_porta[$i]=$(echo "$pts" | awk '{print $2}')
service_serv[$i]=$(echo "$pts" | awk '{print $1}')
echo -e "\033[1;37m [Porta $i]\033[1;37m Serviço: \033[1;31m${service_serv[$i]} \033[1;37mPorta: \033[1;31m${service_porta[$i]}"
i=$(($i+1))
done < $porta_var
rm $portas_var
rm $porta_var
}

fun_ssh () {
sshvar=$(cat /etc/ssh/sshd_config | grep -v "Port $1")
echo "$sshvar" > /etc/ssh/sshd_config
sed -i "s;Port 22;Port 22\nPort $1;g" /etc/ssh/sshd_config
service ssh restart > /dev/null 2>&1 &
}

fun_ip () {
MEU_IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
MEU_IP2=$(wget -qO- ipv4.icanhazip.com)
if [[ "$MEU_IP" != "$MEU_IP2" ]]; then
MEU_IP="$MEU_IP2"
 else
MEU_IP="$MEU_IP"
fi
}

fun_eth () {
eth=$(ifconfig | grep -v inet6 | grep -v lo | grep -v 127.0.0.1 | grep "encap:Ethernet" | awk '{print $1}')
if [ "$eth" != "" ]; then
echo -e "${cor[1]}Aplicar Sistema Para Melhorar Pacotes Ssh?"
echo -e "${cor[3]}Opção Para Usuarios Avançados"
read -p "[s/n]: " s_ssh
 if [[ "$s_ssh" = "s" || "$s_ssh" = "s" ]]; then
echo -e "${cor[1]}Correção de problemas de pacotes no SSH..."
echo -e "Qual A Taxa RX"
read -p "[ 1 - 999999999 ]: " rx
if [ "$rx" = "" ]; then
rx="999999999"
fi
echo -e "Qual A Taxa TX"
read -p "[ 1 - 999999999 ]: " tx
if [ "$tx" = "" ]; then
tx="999999999"
fi
apt-get install ethtool -y > /dev/null 2>&1
ethtool -G $eth rx $rx tx $tx > /dev/null 2>&1
 fi
fi
}

echo -e "${cor[4]}=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠"
echo -e "\033[1;32mSQUID INSTALER ADM-ULTIMATE"
echo -e "${cor[4]}=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠"
fun_ip
read -p "Digite seu IP: " -e -i $MEU_IP ip
apt-get update -y > /dev/null 2>&1
apt-get upgrade -y > /dev/null 2>&1
apt-get install squid3 -y > /dev/null 2>&1
echo -e "INICIANDO INSTALAÇAO"
cp /etc/ssh/sshd_config /etc/ssh/sshd_back
fun_ssh 443

if [[ -e /etc/squid/squid.conf ]]; then
var_squid="/etc/squid/squid.conf"
elif [[ -e /etc/squid3/squid.conf ]]; then
var_squid="/etc/squid3/squid.conf"
fi

echo -e ".bookclaro.com.br/\n.claro.com.ar/\n.claro.com.br/\n.claro.com.co/\n.claro.com.ec/\n.claro.com.gt/\n.claro.com.ni/\n.claro.com.pe/\n.claro.com.sv/\n.claro.cr/\n.clarocurtas.com.br/\n.claroideas.com/\n.claroideias.com.br/\n.claromusica.com/\n.clarosomdechamada.com.br/\n.clarovideo.com/\n.facebook.net/\n.facebook.com/\n.netclaro.com.br/\n.oi.com.br/\n.oimusica.com.br/\n.speedtest.net/\n.tim.com.br/\n.timanamaria.com.br/\n.vivo.com.br/\n.rdio.com/\n.compute-1.amazonaws.com/\n.portalrecarga.vivo.com.br/\n.vivo.ddivulga.com/" > /etc/payloads

##ProxySystem##
echo -e "\033[1;32m Agora Escolha Uma Conf Para Seu Proxy"
echo -e "|1|• Basico"
echo -e "|2|• Completo - \033[1;31mPara Usuarios Avançados!\033[1;37m"
read -p "[ 1 | 2 ]: " proxy_opt
if [ "$proxy_opt" = "2" ]; then
echo "#ConfiguracaoSquiD
acl url1 dstdomain -i $ip
acl url2 dstdomain -i 127.0.0.1
acl url3 url_regex -i '/etc/payloads'
acl url4 dstdomain -i localhost
acl accept dstdomain -i GET
acl accept dstdomain -i POST
acl accept dstdomain -i OPTIONS
acl accept dstdomain -i CONNECT
acl accept dstdomain -i PUT
acl HEAD dstdomain -i HEAD
acl accept dstdomain -i TRACE
acl accept dstdomain -i OPTIONS
acl accept dstdomain -i PATCH
acl accept dstdomain -i PROPATCH
acl accept dstdomain -i DELETE
acl accept dstdomain -i REQUEST
acl accept dstdomain -i METHOD
acl accept dstdomain -i NETDATA
acl accept dstdomain -i MOVE
acl all src 0.0.0.0/0
http_access allow url1
http_access allow url2
http_access allow url3
http_access allow url4
http_access allow accept
http_access allow HEAD
http_access deny all

# Request Headers Forcing

request_header_access Allow allow all
request_header_access Authorization allow all
request_header_access WWW-Authenticate allow all
request_header_access Proxy-Authorization allow all
request_header_access Proxy-Authenticate allow all
request_header_access Cache-Control allow all
request_header_access Content-Encoding allow all
request_header_access Content-Length allow all
request_header_access Content-Type allow all
request_header_access Date allow all
request_header_access Expires allow all
request_header_access Host allow all
request_header_access If-Modified-Since allow all
request_header_access Last-Modified allow all
request_header_access Location allow all
request_header_access Pragma allow all
request_header_access Accept allow all
request_header_access Accept-Charset allow all
request_header_access Accept-Encoding allow all
request_header_access Accept-Language allow all
request_header_access Content-Language allow all
request_header_access Mime-Version allow all
request_header_access Retry-After allow all
request_header_access Title allow all
request_header_access Connection allow all
request_header_access Proxy-Connection allow all
request_header_access User-Agent allow all
request_header_access Cookie allow all
request_header_access All deny all

# Response Headers Spoofing

reply_header_access Via deny all
reply_header_access X-Cache deny all
reply_header_access X-Cache-Lookup deny all


#portas
http_port 80
http_port 8080
http_port 8799
http_port 3128

#nome
visible_hostname ADM-MANAGER

via off
forwarded_for off
pipeline_prefetch off" > $var_squid
 else
echo "#ConfiguracaoSquiD
acl url1 dstdomain -i $ip
acl url2 dstdomain -i 127.0.0.1
acl url3 url_regex -i '/etc/payloads'
acl url4 dstdomain -i localhost
acl all src 0.0.0.0/0
http_access allow url1
http_access allow url2
http_access allow url3
http_access allow url4
http_access deny all

#portas
http_port 80
http_port 8080
http_port 8799
http_port 3128

visible_hostname ADM-MANAGER

via off
forwarded_for off
pipeline_prefetch off" > $var_squid
fi

fun_eth

echo -e "REINICIANDO SERVIÇOS"
squid3 -k reconfigure > /dev/null 2>&1
service ssh restart > /dev/null 2>&1
service squid3 restart > /dev/null 2>&1
echo -e "${cor[4]}=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠"
echo -e "${cor[3]}SQUID CONFIGURADO"
echo -e "${cor[4]}=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠"
minhas_portas
echo -e "${cor[4]}=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠=≠"
exit